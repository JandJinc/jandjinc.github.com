{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_carousel_item = _resolveComponent(\"v-carousel-item\");\n  const _component_v_carousel = _resolveComponent(\"v-carousel\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_overlay = _resolveComponent(\"v-overlay\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($data.show_overlay) + \" \", 1 /* TEXT */), _createVNode(_component_v_overlay, {\n    persistent: \"\",\n    class: \"d-flex align-center justify-center\",\n    modelValue: $data.show_overlay,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.show_overlay = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, {\n      style: {\n        \"min-width\": \"600px\",\n        \"min-height\": \"600px\",\n        \"background-color\": \"rgba(0, 0, 0, 0)\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_carousel, {\n        style: {\n          \"min-width\": \"600px\",\n          \"min-height\": \"600px\",\n          \"background-color\": \"rgba(0, 0, 0, 0)\"\n        }\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(('Geef nooit zomaar je gegevens op het internet :), want we hebben nu al jouw ip ' + $data.ip).split(' '), (text, index) => {\n          return _openBlock(), _createBlock(_component_v_carousel_item, {\n            key: index\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(text), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;+FACEA,kBAAY,IAAE,GAChB,8BASYC;IATDC,UAAU,EAAV,EAAU;IAACC,KAAK,EAAC,oCAAoC;gBAAUH,kBAAY;+DAAZA,kBAAY;;sBAClF,MAOS,CAPTI,aAOSC;MAPDC,KAA+E,EAA/E;QAAA;QAAA;QAAA;MAAA;IAA+E;wBACnF,MAKa,CALbF,aAKaG;QALDD,KAA+E,EAA/E;UAAA;UAAA;UAAA;QAAA;MAA+E;0BACtE,MAA4H,oBAA7IE,oBAEkBC,kHAF4GT,QAAE,EAAEU,KAAK,QAA9GC,IAAI,EAAEC,KAAK;+BAApCC,aAEkBC;YAF6HC,GAAG,EAAEH;UAAK;8BACrJ,MAAQ,mCAAND,IAAI","names":["$data","_component_v_overlay","persistent","class","_createVNode","_component_v_card","style","_component_v_carousel","_createElementBlock","_Fragment","split","text","index","_createBlock","_component_v_carousel_item","key"],"sourceRoot":"","sources":["D:\\GitHub\\jandjinc.github.io\\src\\components\\ContactPage.vue"],"sourcesContent":["<template>\r\n{{show_overlay}}\r\n<v-overlay persistent class=\"d-flex align-center justify-center\" v-model=\"show_overlay\">\r\n    <v-card style=\"min-width: 600px; min-height: 600px; background-color: rgba(0, 0, 0, 0)\">\r\n        <v-carousel style=\"min-width: 600px; min-height: 600px; background-color: rgba(0, 0, 0, 0)\">\r\n            <v-carousel-item v-for=\"(text, index) in ('Geef nooit zomaar je gegevens op het internet :), want we hebben nu al jouw ip ' + ip).split(' ')\" :key=\"index\">\r\n                {{text}}\r\n            </v-carousel-item>\r\n            \r\n        </v-carousel>\r\n    </v-card>\r\n</v-overlay>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n name: 'ContactPage',\r\n components: {\r\n \r\n },\r\n props: {\r\n \r\n },\r\n emits: [],\r\n setup() {\r\n \r\n },\r\n data(){\r\n    return {\r\n        ip: '',\r\n        show_overlay: true\r\n    }\r\n },\r\n computed: {\r\n \r\n },\r\n methods: {\r\n    async getIp(){\r\n        return fetch('https://api.ipify.org?format=json')\r\n            .then(x => x.json())\r\n            .then(({ ip }) => {\r\n            console.log(ip)\r\n                return ip\r\n            });\r\n    \r\n    }\r\n },\r\n watch: {\r\n \r\n },\r\n created() {\r\n    this.ip = this.getIp()\r\n },\r\n mounted() {\r\n \r\n },\r\n \r\n \r\n}\r\n</script>\r\n \r\n<style scoped>\r\n \r\n</style>\r\n>\r\n"]},"metadata":{},"sourceType":"module"}